name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Test package creation
      run: npm pack --dry-run

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check if version changed
      id: version-check
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Check if this version exists on npm
        if npm view i18n-translation-manager@$CURRENT_VERSION version 2>/dev/null; then
          echo "version-exists=true" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION already exists on npm"
        else
          echo "version-exists=false" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION is new, will publish"
        fi

    - name: Publish to npm
      if: steps.version-check.outputs.version-exists == 'false'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      if: steps.version-check.outputs.version-exists == 'false'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version-check.outputs.current-version }}
        name: Release v${{ steps.version-check.outputs.current-version }}
        body: |
          ðŸš€ **i18n Translation Manager v${{ steps.version-check.outputs.current-version }}**
          
          ## What's Changed
          - Auto-generated release from CI/CD pipeline
          - See commit history for detailed changes
          
          ## Installation
          ```bash
          npm install i18n-translation-manager
          ```
          
          ## Usage
          ```bash
          npx i18n-translate help
          ```
        draft: false
        prerelease: false
